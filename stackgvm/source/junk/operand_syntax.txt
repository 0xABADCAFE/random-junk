
Operand Syntax
    #<const int expression>
        Immediate integer value or constant expression resulting in such
        #0, #-1, #1 + 1, #2 * (6 + 3), ...

    l{<const integer expression, range -128:127>}
        Local variable at specified stack frame location
        l{0}, l{1 + 3}, l{2 + 3 * (5 - 2)}, l{-2}, ...


    i0[<const integer expression, range 0:255>]
        Indirect variable, pointed to by i0 plus literal offset
        i0[0], i0[(10 + 2) * 3], ...

    i1[<const int 0:255>]
        Indirect variable, pointed to by i1 plus literal offset
        i1[0], i1[(10 + 2) * 3], ...

    i0[l{<const int -128:127>}]
        Indirect variable, pointed to by i0 plus integer offset in local variable at specified stack frame location
        i0[l{1}], i0[l{(10 + 2) * 3}], i0[l{-1 * 4}]...

    i1[l{<const int -128:127>}]
        Indirect variable, pointed to by i1 plus integer offset in local variable at specified stack frame locatiom
        i1[l{2}], i1[l{(10 + 2) * 3}], ...

    l{<const int -128:127>}[<const int 0:255>]
        Indirect variable, pointed to by reference in local variable at specified stack frame location plus literal offset
        l{0}[4], l{1 + 3}[5 * 6], ...
